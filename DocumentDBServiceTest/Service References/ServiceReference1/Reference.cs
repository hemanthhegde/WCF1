//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocumentDBServiceTest.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IActiDataService")]
    public interface IActiDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/CreateUserProfile", ReplyAction="http://tempuri.org/IActiDataService/CreateUserProfileResponse")]
        bool CreateUserProfile(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/CreateUserProfile", ReplyAction="http://tempuri.org/IActiDataService/CreateUserProfileResponse")]
        System.Threading.Tasks.Task<bool> CreateUserProfileAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/IsUserNameAvailable", ReplyAction="http://tempuri.org/IActiDataService/IsUserNameAvailableResponse")]
        bool IsUserNameAvailable(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/IsUserNameAvailable", ReplyAction="http://tempuri.org/IActiDataService/IsUserNameAvailableResponse")]
        System.Threading.Tasks.Task<bool> IsUserNameAvailableAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/UpdateUserPicture", ReplyAction="http://tempuri.org/IActiDataService/UpdateUserPictureResponse")]
        bool UpdateUserPicture(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/UpdateUserPicture", ReplyAction="http://tempuri.org/IActiDataService/UpdateUserPictureResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserPictureAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/RemoveUserPreference", ReplyAction="http://tempuri.org/IActiDataService/RemoveUserPreferenceResponse")]
        bool RemoveUserPreference(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/RemoveUserPreference", ReplyAction="http://tempuri.org/IActiDataService/RemoveUserPreferenceResponse")]
        System.Threading.Tasks.Task<bool> RemoveUserPreferenceAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/AddUserPreference", ReplyAction="http://tempuri.org/IActiDataService/AddUserPreferenceResponse")]
        bool AddUserPreference(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/AddUserPreference", ReplyAction="http://tempuri.org/IActiDataService/AddUserPreferenceResponse")]
        System.Threading.Tasks.Task<bool> AddUserPreferenceAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/CreateCampaign", ReplyAction="http://tempuri.org/IActiDataService/CreateCampaignResponse")]
        bool CreateCampaign(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/CreateCampaign", ReplyAction="http://tempuri.org/IActiDataService/CreateCampaignResponse")]
        System.Threading.Tasks.Task<bool> CreateCampaignAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetUser", ReplyAction="http://tempuri.org/IActiDataService/GetUserResponse")]
        DocumentDBDataService.DBUser GetUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetUser", ReplyAction="http://tempuri.org/IActiDataService/GetUserResponse")]
        System.Threading.Tasks.Task<DocumentDBDataService.DBUser> GetUserAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetCampaignsForUser", ReplyAction="http://tempuri.org/IActiDataService/GetCampaignsForUserResponse")]
        DocumentDBDataService.DBCampaign[] GetCampaignsForUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetCampaignsForUser", ReplyAction="http://tempuri.org/IActiDataService/GetCampaignsForUserResponse")]
        System.Threading.Tasks.Task<DocumentDBDataService.DBCampaign[]> GetCampaignsForUserAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetTopFeedsForUser", ReplyAction="http://tempuri.org/IActiDataService/GetTopFeedsForUserResponse")]
        DocumentDBDataService.DBCampaign[] GetTopFeedsForUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetTopFeedsForUser", ReplyAction="http://tempuri.org/IActiDataService/GetTopFeedsForUserResponse")]
        System.Threading.Tasks.Task<DocumentDBDataService.DBCampaign[]> GetTopFeedsForUserAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/AddComment", ReplyAction="http://tempuri.org/IActiDataService/AddCommentResponse")]
        bool AddComment(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/AddComment", ReplyAction="http://tempuri.org/IActiDataService/AddCommentResponse")]
        System.Threading.Tasks.Task<bool> AddCommentAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/DeleteComment", ReplyAction="http://tempuri.org/IActiDataService/DeleteCommentResponse")]
        bool DeleteComment(string commentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/DeleteComment", ReplyAction="http://tempuri.org/IActiDataService/DeleteCommentResponse")]
        System.Threading.Tasks.Task<bool> DeleteCommentAsync(string commentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/AddEvent", ReplyAction="http://tempuri.org/IActiDataService/AddEventResponse")]
        bool AddEvent(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/AddEvent", ReplyAction="http://tempuri.org/IActiDataService/AddEventResponse")]
        System.Threading.Tasks.Task<bool> AddEventAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/UpdateEvent", ReplyAction="http://tempuri.org/IActiDataService/UpdateEventResponse")]
        bool UpdateEvent(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/UpdateEvent", ReplyAction="http://tempuri.org/IActiDataService/UpdateEventResponse")]
        System.Threading.Tasks.Task<bool> UpdateEventAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/DeleteEvent", ReplyAction="http://tempuri.org/IActiDataService/DeleteEventResponse")]
        bool DeleteEvent(string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/DeleteEvent", ReplyAction="http://tempuri.org/IActiDataService/DeleteEventResponse")]
        System.Threading.Tasks.Task<bool> DeleteEventAsync(string eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetEventsForUser", ReplyAction="http://tempuri.org/IActiDataService/GetEventsForUserResponse")]
        DocumentDBDataService.Event[] GetEventsForUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetEventsForUser", ReplyAction="http://tempuri.org/IActiDataService/GetEventsForUserResponse")]
        System.Threading.Tasks.Task<DocumentDBDataService.Event[]> GetEventsForUserAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetEventsForCampaign", ReplyAction="http://tempuri.org/IActiDataService/GetEventsForCampaignResponse")]
        DocumentDBDataService.Event[] GetEventsForCampaign(string campaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetEventsForCampaign", ReplyAction="http://tempuri.org/IActiDataService/GetEventsForCampaignResponse")]
        System.Threading.Tasks.Task<DocumentDBDataService.Event[]> GetEventsForCampaignAsync(string campaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetCommentsForUser", ReplyAction="http://tempuri.org/IActiDataService/GetCommentsForUserResponse")]
        DocumentDBDataService.Comment[] GetCommentsForUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetCommentsForUser", ReplyAction="http://tempuri.org/IActiDataService/GetCommentsForUserResponse")]
        System.Threading.Tasks.Task<DocumentDBDataService.Comment[]> GetCommentsForUserAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetCommentsForCampaign", ReplyAction="http://tempuri.org/IActiDataService/GetCommentsForCampaignResponse")]
        DocumentDBDataService.Comment[] GetCommentsForCampaign(string campaignId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActiDataService/GetCommentsForCampaign", ReplyAction="http://tempuri.org/IActiDataService/GetCommentsForCampaignResponse")]
        System.Threading.Tasks.Task<DocumentDBDataService.Comment[]> GetCommentsForCampaignAsync(string campaignId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActiDataServiceChannel : DocumentDBServiceTest.ServiceReference1.IActiDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActiDataServiceClient : System.ServiceModel.ClientBase<DocumentDBServiceTest.ServiceReference1.IActiDataService>, DocumentDBServiceTest.ServiceReference1.IActiDataService {
        
        public ActiDataServiceClient() {
        }
        
        public ActiDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActiDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActiDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActiDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateUserProfile(System.IO.Stream data) {
            return base.Channel.CreateUserProfile(data);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserProfileAsync(System.IO.Stream data) {
            return base.Channel.CreateUserProfileAsync(data);
        }
        
        public bool IsUserNameAvailable(string name) {
            return base.Channel.IsUserNameAvailable(name);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserNameAvailableAsync(string name) {
            return base.Channel.IsUserNameAvailableAsync(name);
        }
        
        public bool UpdateUserPicture(System.IO.Stream data) {
            return base.Channel.UpdateUserPicture(data);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserPictureAsync(System.IO.Stream data) {
            return base.Channel.UpdateUserPictureAsync(data);
        }
        
        public bool RemoveUserPreference(System.IO.Stream data) {
            return base.Channel.RemoveUserPreference(data);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveUserPreferenceAsync(System.IO.Stream data) {
            return base.Channel.RemoveUserPreferenceAsync(data);
        }
        
        public bool AddUserPreference(System.IO.Stream data) {
            return base.Channel.AddUserPreference(data);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserPreferenceAsync(System.IO.Stream data) {
            return base.Channel.AddUserPreferenceAsync(data);
        }
        
        public bool CreateCampaign(System.IO.Stream data) {
            return base.Channel.CreateCampaign(data);
        }
        
        public System.Threading.Tasks.Task<bool> CreateCampaignAsync(System.IO.Stream data) {
            return base.Channel.CreateCampaignAsync(data);
        }
        
        public DocumentDBDataService.DBUser GetUser(string userName) {
            return base.Channel.GetUser(userName);
        }
        
        public System.Threading.Tasks.Task<DocumentDBDataService.DBUser> GetUserAsync(string userName) {
            return base.Channel.GetUserAsync(userName);
        }
        
        public DocumentDBDataService.DBCampaign[] GetCampaignsForUser(string userName) {
            return base.Channel.GetCampaignsForUser(userName);
        }
        
        public System.Threading.Tasks.Task<DocumentDBDataService.DBCampaign[]> GetCampaignsForUserAsync(string userName) {
            return base.Channel.GetCampaignsForUserAsync(userName);
        }
        
        public DocumentDBDataService.DBCampaign[] GetTopFeedsForUser(string userName) {
            return base.Channel.GetTopFeedsForUser(userName);
        }
        
        public System.Threading.Tasks.Task<DocumentDBDataService.DBCampaign[]> GetTopFeedsForUserAsync(string userName) {
            return base.Channel.GetTopFeedsForUserAsync(userName);
        }
        
        public bool AddComment(System.IO.Stream data) {
            return base.Channel.AddComment(data);
        }
        
        public System.Threading.Tasks.Task<bool> AddCommentAsync(System.IO.Stream data) {
            return base.Channel.AddCommentAsync(data);
        }
        
        public bool DeleteComment(string commentId) {
            return base.Channel.DeleteComment(commentId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCommentAsync(string commentId) {
            return base.Channel.DeleteCommentAsync(commentId);
        }
        
        public bool AddEvent(System.IO.Stream data) {
            return base.Channel.AddEvent(data);
        }
        
        public System.Threading.Tasks.Task<bool> AddEventAsync(System.IO.Stream data) {
            return base.Channel.AddEventAsync(data);
        }
        
        public bool UpdateEvent(System.IO.Stream data) {
            return base.Channel.UpdateEvent(data);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEventAsync(System.IO.Stream data) {
            return base.Channel.UpdateEventAsync(data);
        }
        
        public bool DeleteEvent(string eventId) {
            return base.Channel.DeleteEvent(eventId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEventAsync(string eventId) {
            return base.Channel.DeleteEventAsync(eventId);
        }
        
        public DocumentDBDataService.Event[] GetEventsForUser(string userName) {
            return base.Channel.GetEventsForUser(userName);
        }
        
        public System.Threading.Tasks.Task<DocumentDBDataService.Event[]> GetEventsForUserAsync(string userName) {
            return base.Channel.GetEventsForUserAsync(userName);
        }
        
        public DocumentDBDataService.Event[] GetEventsForCampaign(string campaignId) {
            return base.Channel.GetEventsForCampaign(campaignId);
        }
        
        public System.Threading.Tasks.Task<DocumentDBDataService.Event[]> GetEventsForCampaignAsync(string campaignId) {
            return base.Channel.GetEventsForCampaignAsync(campaignId);
        }
        
        public DocumentDBDataService.Comment[] GetCommentsForUser(string userName) {
            return base.Channel.GetCommentsForUser(userName);
        }
        
        public System.Threading.Tasks.Task<DocumentDBDataService.Comment[]> GetCommentsForUserAsync(string userName) {
            return base.Channel.GetCommentsForUserAsync(userName);
        }
        
        public DocumentDBDataService.Comment[] GetCommentsForCampaign(string campaignId) {
            return base.Channel.GetCommentsForCampaign(campaignId);
        }
        
        public System.Threading.Tasks.Task<DocumentDBDataService.Comment[]> GetCommentsForCampaignAsync(string campaignId) {
            return base.Channel.GetCommentsForCampaignAsync(campaignId);
        }
    }
}
